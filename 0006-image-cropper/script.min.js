const fileUpload = document.getElementById("fileUpload"),
  image = document.getElementById("image"),
  output = document.getElementById("output"),
  btnCrop = document.getElementById("btn-crop"),
  aspectRatioSelect = document.getElementById("aspectRatio"),
  downloadBtn = document.querySelector(".download-btn"),
  hide = document.getElementById("hide");
let cropper;
function initializeCropper() {
  cropper && cropper.destroy(),
    (cropper = new Cropper(image, {
      aspectRatio: 1,
      viewMode: 1,
      autoCropArea: 1,
      movable: !0,
      zoomable: !0,
      scalable: !1,
      cropBoxResizable: !0,
    }));
}
fileUpload.addEventListener("change", (e) => {
  let t = e.target.files[0];
  if (t && t.type.startsWith("image/")) {
    let a = new FileReader();
    (a.onload = () => {
      (image.src = a.result),
        (image.style.display = "block"),
        (btnCrop.style.display = "inline-block"),
        initializeCropper();
    }),
      a.readAsDataURL(t);
  }
}),
  aspectRatioSelect.addEventListener("change", () => {
    let selectedRatio = aspectRatioSelect.value;
    cropper.setAspectRatio(
      "free" === selectedRatio ? NaN : eval(selectedRatio)
    );
  }),
  btnCrop.addEventListener("click", () => {
    let e = cropper.getCroppedCanvas();
    (output.src = e.toDataURL("image/png")),
      (downloadBtn.style.display = "block"),
      (hide.style.display = "none");
  }),
  downloadBtn.addEventListener("click", () => {
    let e = document.createElement("a");
    (e.href = output.src), (e.download = "cropped-image.png"), e.click();
  });
